diff --git a/net-mgmt/pmacct/Makefile b/net-mgmt/pmacct/Makefile
index 0aaddaf8a6..ff43591f8b 100644
--- a/net-mgmt/pmacct/Makefile
+++ b/net-mgmt/pmacct/Makefile
@@ -1,6 +1,5 @@
 PORTNAME=	pmacct
-DISTVERSION=	1.7.7
-PORTREVISION=	1
+DISTVERSION=	1.7.8
 CATEGORIES=	net-mgmt
 MASTER_SITES=	http://www.pmacct.net/
 
@@ -66,7 +65,7 @@ GEOIP2_CONFIGURE_ENABLE=	geoipv2
 .include <bsd.port.pre.mk>
 
 .if ${ARCH} == "i386"
-EXTRA_PATCHES+= ${FILESDIR}/extra-patch-i386
+EXTRA_PATCHES+=	${FILESDIR}/extra-patch-i386
 .endif
 
 PLIST_SUB+=	SQLDOC=${SQLDOC}
diff --git a/net-mgmt/pmacct/distinfo b/net-mgmt/pmacct/distinfo
index e0c589a9eb..a88d99cb0d 100644
--- a/net-mgmt/pmacct/distinfo
+++ b/net-mgmt/pmacct/distinfo
@@ -1,3 +1,3 @@
-TIMESTAMP = 1638535520
-SHA256 (pmacct-1.7.7.tar.gz) = 8c781f38565bb899a31feb0962676a3c9ce712cf180fe0dca9120bfb15ddfb8c
-SIZE (pmacct-1.7.7.tar.gz) = 2149629
+TIMESTAMP = 1677615514
+SHA256 (pmacct-1.7.8.tar.gz) = 4df50a3c6c7bdace3345bbf3bd4f6fa7a6722ec1fb45dfd266ad956b327da98a
+SIZE (pmacct-1.7.8.tar.gz) = 2175335
diff --git a/net-mgmt/pmacct/files/patch-configure.ac b/net-mgmt/pmacct/files/patch-configure.ac
deleted file mode 100644
index c917463ca3..0000000000
--- a/net-mgmt/pmacct/files/patch-configure.ac
+++ /dev/null
@@ -1,20 +0,0 @@
---- configure.ac.orig	2021-11-05 16:03:23.000000000 +0100
-+++ configure.ac	2022-04-15 16:15:06.250117000 +0200
-@@ -404,9 +404,14 @@
-     AC_CHECK_HEADERS([mysql.h mysql/mysql.h])
-     CFLAGS="$_save_CFLAGS"
- 
--    AC_CHECK_LIB([numa], [numa_bind], [], [AC_MSG_ERROR([
--      ERROR: missing libnuma. Requirement for building MySQL.
--    ])])
-+    case "$host_os" in
-+    linux*)
-+      AC_CHECK_LIB([numa], [numa_bind], [], [AC_MSG_ERROR([
-+        ERROR: missing libnuma. Requirement for building MySQL.
-+      ])])
-+    ;;
-+    esac
-+
-     ;;
-   no)
-     AC_MSG_RESULT(no)
diff --git a/net-mgmt/pmacct/files/patch-src_bgp_bgp__lookup.c b/net-mgmt/pmacct/files/patch-src_bgp_bgp__lookup.c
new file mode 100644
index 0000000000..928e1d5da8
--- /dev/null
+++ b/net-mgmt/pmacct/files/patch-src_bgp_bgp__lookup.c
@@ -0,0 +1,11 @@
+--- src/bgp/bgp_lookup.c.orig	2023-03-01 11:10:49 UTC
++++ src/bgp/bgp_lookup.c
+@@ -349,7 +349,7 @@ void bgp_follow_nexthop_lookup(struct packet_ptrs *ppt
+   struct in6_addr pref6;
+   u_char *saved_agent = pptrs->f_agent;
+   pm_id_t bta;
+-  u_int32_t modulo, local_modulo, modulo_idx, modulo_max;
++  u_int32_t modulo, local_modulo __attribute__((unused)), modulo_idx __attribute__((unused)), modulo_max;
+ 
+   bms = bgp_select_misc_db(type);
+   inter_domain_routing_db = bgp_select_routing_db(type);
diff --git a/net-mgmt/pmacct/files/patch-src_imt__plugin.c b/net-mgmt/pmacct/files/patch-src_imt__plugin.c
new file mode 100644
index 0000000000..608b32f249
--- /dev/null
+++ b/net-mgmt/pmacct/files/patch-src_imt__plugin.c
@@ -0,0 +1,11 @@
+--- src/imt_plugin.c.orig	2023-03-01 11:33:13 UTC
++++ src/imt_plugin.c
+@@ -158,7 +158,7 @@ void imt_plugin(int pipe_fd, struct configuration *cfg
+   if (!config.imt_plugin_path) config.imt_plugin_path = path; 
+   if (!config.buckets) config.buckets = MAX_HOSTS;
+ 
+-  init_memory_pool_table(config);
++  init_memory_pool_table();
+   if (mpd == NULL) {
+     Log(LOG_ERR, "ERROR ( %s/%s ): unable to allocate memory pools table\n", config.name, config.type);
+     exit_gracefully(1);
diff --git a/net-mgmt/pmacct/files/patch-src_net__aggr.h b/net-mgmt/pmacct/files/patch-src_net__aggr.h
new file mode 100644
index 0000000000..247f1c0fe5
--- /dev/null
+++ b/net-mgmt/pmacct/files/patch-src_net__aggr.h
@@ -0,0 +1,11 @@
+--- src/net_aggr.h.orig	2023-02-28 21:01:59 UTC
++++ src/net_aggr.h
+@@ -91,7 +91,7 @@ typedef void (*net_func) (struct networks_table *, str
+ typedef void (*net_func) (struct networks_table *, struct networks_cache *, struct pkt_primitives *, struct pkt_bgp_primitives *, struct networks_file_data *);
+ 
+ /* prototypes */
+-extern void set_net_funcs();
++extern void set_net_funcs(struct networks_table *);
+ extern void init_net_funcs(struct networks_table *, struct networks_cache *, struct pkt_primitives *, struct pkt_bgp_primitives *, struct networks_file_data *); 
+ extern void mask_src_ipaddr(struct networks_table *, struct networks_cache *, struct pkt_primitives *, struct pkt_bgp_primitives *, struct networks_file_data *); 
+ extern void mask_dst_ipaddr(struct networks_table *, struct networks_cache *, struct pkt_primitives *, struct pkt_bgp_primitives *, struct networks_file_data *); 
diff --git a/net-mgmt/pmacct/files/patch-src_pretag__handlers.c b/net-mgmt/pmacct/files/patch-src_pretag__handlers.c
new file mode 100644
index 0000000000..e34032f217
--- /dev/null
+++ b/net-mgmt/pmacct/files/patch-src_pretag__handlers.c
@@ -0,0 +1,20 @@
+--- src/pretag_handlers.c.orig	2023-03-01 11:22:01 UTC
++++ src/pretag_handlers.c
+@@ -4189,7 +4189,7 @@ int PT_map_index_fdata_src_net_handler(struct id_table
+   SFSample *sample = (SFSample *) pptrs->f_data;
+   SFLAddress *sf_addr = &sample->ipsrc;
+   u_int8_t netmask;
+-  int ret;
++  int ret = 0;
+ 
+   if (config.acct_type == ACCT_NF) {
+     switch(hdr->version) {
+@@ -4259,7 +4259,7 @@ int PT_map_index_fdata_dst_net_handler(struct id_table
+   SFSample *sample = (SFSample *) pptrs->f_data;
+   SFLAddress *sf_addr = &sample->ipdst;
+   u_int8_t netmask;
+-  int ret;
++  int ret = 0;
+ 
+   if (config.acct_type == ACCT_NF) {
+     switch(hdr->version) {
diff --git a/net-mgmt/pmacct/files/patch-src_setproctitle.c b/net-mgmt/pmacct/files/patch-src_setproctitle.c
new file mode 100644
index 0000000000..c0c16f7312
--- /dev/null
+++ b/net-mgmt/pmacct/files/patch-src_setproctitle.c
@@ -0,0 +1,29 @@
+--- src/setproctitle.c.orig	2022-12-31 19:17:17 UTC
++++ src/setproctitle.c
+@@ -38,12 +38,11 @@ extern char *__progname;
+  * NEWSTR -- Create a copy of a C string
+  */
+ 
+-char *spt_newstr(s)
+-const char *s;
++char* spt_newstr(const char *s)
+ {
+   size_t l;
+   char *n;
+-  
++
+   l = strlen(s);
+   n = malloc(l + 1);
+   strlcpy(n, s, l + 1);
+@@ -81,10 +80,7 @@ void
+ static char	*LastArgv = NULL;	/* end of argv */
+ 
+ void
+-initsetproctitle(argc, argv, envp)
+-	int argc;
+-	char **argv;
+-	char **envp;
++initsetproctitle(int argc, char **argv, char **envp)
+ {
+ 	register int i;
+ 	extern char **environ;
diff --git a/net-mgmt/pmacct/files/patch-src_util.c b/net-mgmt/pmacct/files/patch-src_util.c
index 5217664662..2ffca7474b 100644
--- a/net-mgmt/pmacct/files/patch-src_util.c
+++ b/net-mgmt/pmacct/files/patch-src_util.c
@@ -1,13 +1,11 @@
---- src/util.c.orig	2021-11-05 15:03:23 UTC
+--- src/util.c.orig	2023-03-01 11:20:38 UTC
 +++ src/util.c
-@@ -2069,8 +2069,8 @@ void compose_timestamp(char *buf, int buflen, struct t
-   if (buflen < VERYSHORTBUFLEN) return; 
+@@ -878,7 +878,7 @@ int handle_dynname_internal_strings(char *new, int new
+   char proto_string[] = "$proto", in_iface_string[] = "$in_iface";
+ 
+   char buf[newlen], *ptr_start, *ptr_end, *ptr_var, *ptr_substr, *last_char;
+-  int oldlen, var_num, var_len, rem_len, sub_len; 
++  int oldlen, var_num __attribute__((unused)), var_len, rem_len, sub_len; 
+ 
+   if (!new || !old || !prim_ptrs) return ERR;
  
-   if (since_epoch) {
--    if (usec) snprintf(buf, buflen, "%ld.%.6ld", tv->tv_sec, (long)tv->tv_usec);
--    else snprintf(buf, buflen, "%ld", tv->tv_sec);
-+    if (usec) snprintf(buf, buflen, "%ld.%.6ld", (long)tv->tv_sec, (long)tv->tv_usec);
-+    else snprintf(buf, buflen, "%ld", (long)tv->tv_sec);
-   }
-   else {
-     time1 = tv->tv_sec;
